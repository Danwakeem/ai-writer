service: ai-writer
frameworkVersion: '3'

params:
  default:
    dynamoTable: summaries-${opt:stage, "dev"}

provider:
  name: aws
  logRetentionInDays: 1
  runtime: nodejs18.x
  environment:
    SSM_PARAMETER_STORE_TTL: 60
    PARAMETERS_SECRETS_EXTENSION_HTTP_PORT: 9876
    OPENAI_PARAMETER_NAME: /openai/api-key
    HUGGING_FACE_KEY: /huggingface/api-key
    DYNAMO_TABLE: ${param:dynamoTable}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - kms:Decrypt
          Resource: '*'
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: '*'

plugins:
  - serverless-esbuild
  - serverless-step-functions
  - serverless-appsync-plugin

package:
  individually: true

custom:
  esbuild:
    bundle: true
    minify: false
  appSync:
    name: ai-writer-${sls:stage}
    # domain:
    #   name: ai-writer-api-${sls:stage}.danwakeem.com
    #   certificateArn: ${param:domainCertArn}
    authenticationType: AWS_LAMBDA
    lambdaAuthorizerConfig:
      functionName: authorizer
    defaultMappingTemplates: # default templates. Useful for Lambda templates that are often repetitive. Will be used if the template is not specified in a resolver
      request: false
      response: false
    mappingTemplates:
      - dataSource: dailySummaries
        type: Query
        field: dailySummaries
      - dataSource: articles
        type: Query
        field: articles
    dataSources:
      - type: AWS_LAMBDA
        name: dailySummaries
        config:
          functionName: dailySummaries
          serviceRoleArn: { Fn::GetAtt: [AppSyncLambdaServiceRole, Arn] }
      - type: AWS_LAMBDA
        name: articles
        config:
          functionName: articles
          serviceRoleArn: { Fn::GetAtt: [AppSyncLambdaServiceRole, Arn] }

functions:
  authorizer:
    handler: src/graphql/authorizer.handler
  dailySummaries:
    handler: src/graphql/query/dailySummaries.handler
    timeout: 20
  articles:
    handler: src/graphql/query/articles.handler
    timeout: 20
  fetchArticles:
    timeout: 300
    handler: src/steps/fetchArticles.handler
    layers:
      - arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension:2
  extractArticleText:
    timeout: 300
    handler: src/steps/extractArticleText.handler
    layers:
      - arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension:2
  summarizeArticle:
    timeout: 300
    handler: src/steps/summarizeArticle.handler
    layers:
      - arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension:2
  publishArticles:
    timeout: 300
    handler: src/steps/publishArticles.handler
    layers:
      - arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension:2

resources:
  Resources:
    AppSyncLambdaServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: ai-writer-AppSync-Lambda
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "appsync.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: ai-writer-AppSync-Lambda-Policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "lambda:invokeFunction"
                  Resource:
                    - "*"
    SummariesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${param:dynamoTable}
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: docType
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: docType-index
            KeySchema:
              - AttributeName: docType
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true


stepFunctions:
  stateMachines:
    articleGenerator:
      # events:
      #   - schedule:
      #       rate: rate(10 minutes)
      #       enabled: true
      #       input:
      #         key1: value1
      #         key2: value2
      #         stageParams:
      #           stage: dev
      name: articleGenerator
      definition:
        Comment: "A article generated that summarizes daily news from ABC News"
        StartAt: FetchArticles
        States:
          FetchArticles:
            Type: Task
            Resource:
              Fn::GetAtt: [fetchArticles, Arn]
            Next: ShouldSkip
          ShouldSkip:
            Type: Choice
            Choices:
              - Variable: "$.skip"
                StringEquals: "true"
                Next: Done
            Default: ExtractArticleText
          ExtractArticleText:
            Type: Task
            Resource:
              Fn::GetAtt: [extractArticleText, Arn]
            Next: SummarizeAll
          SummarizeAll:
            Type: Map
            MaxConcurrency: 1
            Iterator:
              StartAt: SummarizeArticle
              States:
                SummarizeArticle:
                  Type: Task
                  Resource:
                    Fn::GetAtt: [summarizeArticle, Arn]
                  End: true
            Next: PublishArticles
          PublishArticles:
            Type: Task
            Resource:
              Fn::GetAtt: [publishArticles, Arn]
            End: true
          Done:
            Type: Pass
            End: true
  validate: true
